name: Build and Commit libarchive Static Libraries

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build Static Libraries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [amd64, arm64]
        exclude:
          - os: windows-latest
            arch: arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Build on Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          mkdir -p build
          cd build
          gcc -llibarchive -c -o libarchive.o -fPIC -O2 -g -c ../libarchive.c
          ar rcs libarchive_linux_${{ matrix.arch }}.a libarchive.o
          ranlib libarchive_linux_${{ matrix.arch }}.a

      - name: Build on macOS
        if: matrix.os == 'macos-latest'
        run: |
          mkdir -p build
          cd build
          if [ "${{ matrix.arch }}" = "amd64" ]; then
            clang -llibarchive -c -o libarchive.o -target x86_64-apple-macos12.0 -fPIC -O2 -g -c ../libarchive.c
          elif [ "${{ matrix.arch }}" = "arm64" ]; then
            clang -llibarchive -c -o libarchive.o -target arm64-apple-macos12.0 -fPIC -O2 -g -c ../libarchive.c
          fi
          ar rcs libarchive_darwin_${{ matrix.arch }}.a libarchive.o
          ranlib libarchive_darwin_${{ matrix.arch }}.a

      - uses: msys2/setup-msys2@v2
        if: matrix.os == 'windows-latest' && matrix.arch == 'amd64'
        with:
          msystem: MINGW64
          update: true
          install: >-
            mingw-w64-x86_64-gcc
            perl

      - name: Install Pod::Usage Perl Module
        if: matrix.os == 'windows-latest'
        shell: msys2 {0}
        run: |
          cpan install Pod::Usage

      - name: Verify Installation on Windows
        if: matrix.os == 'windows-latest'
        shell: msys2 {0}
        run: |
          perl -MPod::Usage -e 'print "Pod::Usage is installed\n";'

      - name: Build libarchive on Windows
        if: matrix.os == 'windows-latest' && matrix.arch == 'amd64'
        shell: msys2 {0}
        run: |
          mkdir -p build
          cd build
          gcc -llibarchive -c -o libarchive.o -O2 -g -c ../libarchive.c
          ar rcs libarchive_windows_amd64.a libarchive.o
          ranlib libarchive_windows_amd64.a

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: libarchive-static-libs
          path: |
            build/libarchive_darwin_${{ matrix.arch }}.a
            build/libarchive_linux_${{ matrix.arch }}.a
            build/libarchive_windows_amd64.a

  commit:
    name: Commit and Push Static Libraries
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: libarchive-static-libs
          path: .

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          file_pattern: "*.a"
          commit_message: Built rapidyenc
