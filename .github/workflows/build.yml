name: Build and Commit libarchive Static Libraries

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build Static Libraries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [amd64, arm64]
        exclude:
          - os: windows-latest
            arch: arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build on Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libarchive-dev build-essential pkg-config
          mkdir -p build/linux_${{ matrix.arch }}
          cd build/linux_${{ matrix.arch }}
          pkg-config --cflags --libs libarchive
          gcc -c -o libarchive.o $(pkg-config --cflags libarchive) -fPIC -O2 -g -c ../../src/libarchive.c
          ar rcs libarchive.a libarchive.o
          ranlib libarchive.a

      - name: Build on macOS
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install libarchive
          export PKG_CONFIG_PATH="/opt/homebrew/opt/libarchive/lib/pkgconfig"
          echo 'export PATH="/opt/homebrew/opt/libarchive/bin:$PATH"' >> /Users/runner/.bash_profile
          mkdir -p build/darwin_${{ matrix.arch }}
          cd build/darwin_${{ matrix.arch }}
          pkg-config --cflags --libs libarchive
          if [ "${{ matrix.arch }}" = "amd64" ]; then
            clang -c -o libarchive.o $(pkg-config --cflags libarchive) -target x86_64-apple-macos12.0 -fPIC -O2 -g -c ../../src/libarchive.c
          elif [ "${{ matrix.arch }}" = "arm64" ]; then
            clang -c -o libarchive.o $(pkg-config --cflags libarchive) -target arm64-apple-macos12.0 -fPIC -O2 -g -c ../../src/libarchive.c
          fi
          ar rcs libarchive.a libarchive.o
          ranlib libarchive.a

      - uses: msys2/setup-msys2@v2
        if: matrix.os == 'windows-latest' && matrix.arch == 'amd64'
        with:
          msystem: MINGW64
          update: true
          install: >-
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-libarchive
            pkg-config
            perl

      - name: Install Pod::Usage Perl Module
        if: matrix.os == 'windows-latest'
        shell: msys2 {0}
        run: |
          cpan install Pod::Usage

      - name: Verify Installation on Windows
        if: matrix.os == 'windows-latest'
        shell: msys2 {0}
        run: |
          pacman -Q mingw-w64-x86_64-libarchive
          perl -MPod::Usage -e 'print "Pod::Usage is installed\n";'
          pkg-config --list-all

      - name: Build libarchive on Windows
        if: matrix.os == 'windows-latest' && matrix.arch == 'amd64'
        shell: msys2 {0}
        run: |
          export PKG_CONFIG_PATH=/mingw64/lib/pkgconfig
          mkdir -p build/windows_amd64
          cd build/windows_amd64
          pkg-config --cflags --libs libarchive
          gcc -c -o libarchive.o $(pkg-config --cflags libarchive) -O2 -g -c ../../src/libarchive.c
          ar rcs libarchive.a libarchive.o
          ranlib libarchive.a

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: libarchive-static-libs
          path: |
            build/linux_${{ matrix.arch }}/libarchive.a
            build/darwin_${{ matrix.arch }}/libarchive.a
            build/windows_amd64/libarchive.a

  commit:
    name: Commit and Push Static Libraries
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: libarchive-static-libs
          path: .

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          file_pattern: "*.a"
          commit_message: Built rapidyenc
